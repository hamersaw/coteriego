syntax = "proto3";
option optimize_for = SPEED;

package coterie;

message CoterieMsg {
	enum Type {
		CLOSE_CONNECTION = 0;
		INSERT_ENTRY = 1;
		INSERT_RECORD = 2;
		INSERT_RECORDS = 3;
		QUERY = 4;
		QUERY_RESULT = 5;
		RESULT = 6;
	}

	Type type = 1;
	CloseConnectionMsg close_connection_msg = 2;
	InsertEntryMsg insert_entry_msg = 3;
	InsertRecordMsg insert_record_msg = 4;
	InsertRecordsMsg insert_records_msg = 5;
	QueryMsg query_msg = 6;
	QueryResultMsg query_result_msg = 7;
	ResultMsg result_msg = 8;
}

message CloseConnectionMsg {
	string reason = 1;
}

message Filter {
	string field_name = 1;
	string type = 2;
	repeated string arguments = 3;
	string value = 4;
}

message InsertEntryMsg {
	uint64 token = 1;
	string key = 2;
	string value = 3;
}

message InsertRecordMsg {
	uint64 token = 1;
	Record record = 2;
}

message QueryMsg {
	repeated string field_names = 1;
	repeated Filter filters = 2;
}

message QueryResultMsg {
	repeated Record records = 1;
}

message Record {
	map<string,string> entries = 1;
}

message InsertRecordsMsg {
	repeated Record records = 1;
}

message ResultMsg {
	bool success = 1;
	string msg = 2;
}
