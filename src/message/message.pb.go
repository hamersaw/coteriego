// Code generated by protoc-gen-go.
// source: message/message.proto
// DO NOT EDIT!

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	message/message.proto

It has these top-level messages:
	DHTMsg
	HeartbeatMsg
	LookupTableDumpMsg
	ResultMsg
	FuzzyDBMsg
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DHTMsg_Type int32

const (
	DHTMsg_HEARTBEAT         DHTMsg_Type = 0
	DHTMsg_LOOKUP_TABLE_DUMP DHTMsg_Type = 1
	DHTMsg_RESULT            DHTMsg_Type = 2
)

var DHTMsg_Type_name = map[int32]string{
	0: "HEARTBEAT",
	1: "LOOKUP_TABLE_DUMP",
	2: "RESULT",
}
var DHTMsg_Type_value = map[string]int32{
	"HEARTBEAT":         0,
	"LOOKUP_TABLE_DUMP": 1,
	"RESULT":            2,
}

func (x DHTMsg_Type) String() string {
	return proto.EnumName(DHTMsg_Type_name, int32(x))
}
func (DHTMsg_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type FuzzyDBMsg_Type int32

const (
	FuzzyDBMsg_OPEN_WRITE_STREAM FuzzyDBMsg_Type = 0
)

var FuzzyDBMsg_Type_name = map[int32]string{
	0: "OPEN_WRITE_STREAM",
}
var FuzzyDBMsg_Type_value = map[string]int32{
	"OPEN_WRITE_STREAM": 0,
}

func (x FuzzyDBMsg_Type) String() string {
	return proto.EnumName(FuzzyDBMsg_Type_name, int32(x))
}
func (FuzzyDBMsg_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4, 0} }

type DHTMsg struct {
	Type               DHTMsg_Type         `protobuf:"varint,1,opt,name=type,enum=DHTMsg_Type" json:"type,omitempty"`
	HeartbeatMsg       *HeartbeatMsg       `protobuf:"bytes,2,opt,name=heartbeat_msg" json:"heartbeat_msg,omitempty"`
	LookupTableDumpMsg *LookupTableDumpMsg `protobuf:"bytes,3,opt,name=lookup_table_dump_msg" json:"lookup_table_dump_msg,omitempty"`
	ResultMsg          *ResultMsg          `protobuf:"bytes,4,opt,name=result_msg" json:"result_msg,omitempty"`
}

func (m *DHTMsg) Reset()                    { *m = DHTMsg{} }
func (m *DHTMsg) String() string            { return proto.CompactTextString(m) }
func (*DHTMsg) ProtoMessage()               {}
func (*DHTMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DHTMsg) GetHeartbeatMsg() *HeartbeatMsg {
	if m != nil {
		return m.HeartbeatMsg
	}
	return nil
}

func (m *DHTMsg) GetLookupTableDumpMsg() *LookupTableDumpMsg {
	if m != nil {
		return m.LookupTableDumpMsg
	}
	return nil
}

func (m *DHTMsg) GetResultMsg() *ResultMsg {
	if m != nil {
		return m.ResultMsg
	}
	return nil
}

type HeartbeatMsg struct {
	Tokens             []uint64 `protobuf:"varint,1,rep,name=tokens" json:"tokens,omitempty"`
	Address            string   `protobuf:"bytes,2,opt,name=address" json:"address,omitempty"`
	ApplicationAddress string   `protobuf:"bytes,3,opt,name=application_address" json:"application_address,omitempty"`
	RequestTableDump   bool     `protobuf:"varint,4,opt,name=request_table_dump" json:"request_table_dump,omitempty"`
}

func (m *HeartbeatMsg) Reset()                    { *m = HeartbeatMsg{} }
func (m *HeartbeatMsg) String() string            { return proto.CompactTextString(m) }
func (*HeartbeatMsg) ProtoMessage()               {}
func (*HeartbeatMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type LookupTableDumpMsg struct {
	LookupTable map[uint64]string `protobuf:"bytes,1,rep,name=lookup_table" json:"lookup_table,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *LookupTableDumpMsg) Reset()                    { *m = LookupTableDumpMsg{} }
func (m *LookupTableDumpMsg) String() string            { return proto.CompactTextString(m) }
func (*LookupTableDumpMsg) ProtoMessage()               {}
func (*LookupTableDumpMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LookupTableDumpMsg) GetLookupTable() map[uint64]string {
	if m != nil {
		return m.LookupTable
	}
	return nil
}

type ResultMsg struct {
	Success      bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message" json:"error_message,omitempty"`
}

func (m *ResultMsg) Reset()                    { *m = ResultMsg{} }
func (m *ResultMsg) String() string            { return proto.CompactTextString(m) }
func (*ResultMsg) ProtoMessage()               {}
func (*ResultMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type FuzzyDBMsg struct {
	Type FuzzyDBMsg_Type `protobuf:"varint,1,opt,name=type,enum=FuzzyDBMsg_Type" json:"type,omitempty"`
}

func (m *FuzzyDBMsg) Reset()                    { *m = FuzzyDBMsg{} }
func (m *FuzzyDBMsg) String() string            { return proto.CompactTextString(m) }
func (*FuzzyDBMsg) ProtoMessage()               {}
func (*FuzzyDBMsg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*DHTMsg)(nil), "DHTMsg")
	proto.RegisterType((*HeartbeatMsg)(nil), "HeartbeatMsg")
	proto.RegisterType((*LookupTableDumpMsg)(nil), "LookupTableDumpMsg")
	proto.RegisterType((*ResultMsg)(nil), "ResultMsg")
	proto.RegisterType((*FuzzyDBMsg)(nil), "FuzzyDBMsg")
	proto.RegisterEnum("DHTMsg_Type", DHTMsg_Type_name, DHTMsg_Type_value)
	proto.RegisterEnum("FuzzyDBMsg_Type", FuzzyDBMsg_Type_name, FuzzyDBMsg_Type_value)
}

var fileDescriptor0 = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0x5e, 0xd2, 0x50, 0xe8, 0x35, 0x45, 0xe1, 0x46, 0x51, 0x85, 0x84, 0x34, 0x85, 0x3d, 0x0c,
	0x09, 0x65, 0x52, 0x79, 0x99, 0x78, 0x40, 0x4a, 0xd5, 0x8c, 0x02, 0x2d, 0x2d, 0x9e, 0x2b, 0x1e,
	0xad, 0xb4, 0xb5, 0xba, 0xa9, 0x69, 0x13, 0x6c, 0x07, 0xa9, 0xfb, 0x0b, 0xfc, 0x06, 0xc4, 0x5f,
	0x25, 0x71, 0x93, 0x61, 0x18, 0x4f, 0xf6, 0x7d, 0xdf, 0x7d, 0x67, 0xdf, 0x77, 0x07, 0xdd, 0x2d,
	0x97, 0x32, 0x5e, 0xf3, 0xf3, 0xea, 0x0c, 0x32, 0x91, 0xaa, 0xd4, 0xff, 0x61, 0x43, 0x73, 0x38,
	0xa2, 0x13, 0xb9, 0xc6, 0x13, 0x70, 0xd4, 0x3e, 0xe3, 0x3d, 0xeb, 0xc4, 0x3a, 0x7b, 0xdc, 0x77,
	0x83, 0x03, 0x1c, 0xd0, 0x02, 0x23, 0x9a, 0xc1, 0x3e, 0x74, 0xae, 0x79, 0x2c, 0xd4, 0x82, 0xc7,
	0x8a, 0x6d, 0xe5, 0xba, 0x67, 0x17, 0xa9, 0xed, 0x7e, 0x27, 0x18, 0xd5, 0x68, 0x21, 0x20, 0xee,
	0xb5, 0x11, 0xe1, 0x25, 0x74, 0x93, 0x34, 0xdd, 0xe4, 0x19, 0x53, 0xf1, 0x22, 0xe1, 0x6c, 0x95,
	0x6f, 0x33, 0xad, 0x6d, 0x68, 0xed, 0x71, 0x30, 0xd6, 0x2c, 0x2d, 0xc9, 0x61, 0xc1, 0x95, 0x15,
	0x30, 0xb9, 0x87, 0xe1, 0x2b, 0x00, 0xc1, 0x65, 0x9e, 0x1c, 0x1e, 0x76, 0xb4, 0x18, 0x02, 0xa2,
	0xa1, 0x52, 0xd3, 0x12, 0xf5, 0xd5, 0xbf, 0x00, 0xa7, 0xfc, 0x34, 0x76, 0xa0, 0x35, 0x8a, 0x42,
	0x42, 0x07, 0x51, 0x48, 0xbd, 0x23, 0xec, 0xc2, 0x93, 0xf1, 0x74, 0xfa, 0x69, 0x3e, 0x63, 0x34,
	0x1c, 0x8c, 0x23, 0x36, 0x9c, 0x4f, 0x66, 0x9e, 0x85, 0x00, 0x4d, 0x12, 0x5d, 0xcd, 0xc7, 0xd4,
	0xb3, 0xfd, 0x5f, 0x16, 0xb8, 0x66, 0x2f, 0xf8, 0x0c, 0x9a, 0x2a, 0xdd, 0xf0, 0x9d, 0x2c, 0x5c,
	0x69, 0x9c, 0x39, 0xa4, 0x8a, 0xb0, 0x07, 0x0f, 0xe3, 0xd5, 0xaa, 0x78, 0x52, 0x6a, 0x0f, 0x5a,
	0xa4, 0x0e, 0xf1, 0x1c, 0x8e, 0xe3, 0x2c, 0x4b, 0x6e, 0x96, 0xb1, 0xba, 0x49, 0x77, 0xac, 0xce,
	0x6a, 0xe8, 0x2c, 0x34, 0xa8, 0xb0, 0x12, 0xbc, 0x06, 0x14, 0xfc, 0x5b, 0xce, 0xa5, 0x32, 0x1c,
	0xd2, 0x0d, 0x3e, 0x22, 0x5e, 0xc5, 0xdc, 0x39, 0xe1, 0xff, 0xb4, 0x00, 0xef, 0x3b, 0x86, 0xef,
	0xc1, 0x35, 0x5d, 0xd6, 0xbf, 0x6d, 0xf7, 0x4f, 0xff, 0x63, 0xae, 0x09, 0x45, 0x3b, 0x25, 0xf6,
	0xa4, 0x6d, 0xb8, 0xfd, 0xfc, 0x1d, 0x78, 0xff, 0x26, 0xa0, 0x07, 0x8d, 0x0d, 0xdf, 0xeb, 0xbd,
	0x70, 0x48, 0x79, 0xc5, 0xa7, 0xf0, 0xe0, 0x7b, 0x9c, 0xe4, 0xbc, 0x6a, 0xfe, 0x10, 0xbc, 0xb5,
	0x2f, 0x2c, 0xff, 0x23, 0xb4, 0xee, 0x66, 0x52, 0xba, 0x24, 0xf3, 0xe5, 0xb2, 0xec, 0xdf, 0xd2,
	0xfd, 0xd4, 0x21, 0xbe, 0x84, 0x0e, 0x17, 0x22, 0x15, 0xac, 0xda, 0xc6, 0xaa, 0x90, 0xab, 0xc1,
	0xc9, 0x01, 0xf3, 0xbf, 0x00, 0x5c, 0xe6, 0xb7, 0xb7, 0xfb, 0xe1, 0xa0, 0x2c, 0x76, 0xfa, 0xd7,
	0x7a, 0x7a, 0xc1, 0x1f, 0xca, 0x58, 0x51, 0xff, 0x45, 0x35, 0xfb, 0x62, 0xd8, 0xd3, 0x59, 0xf4,
	0x99, 0x7d, 0x25, 0x1f, 0x68, 0xc4, 0xae, 0x28, 0x89, 0xc2, 0x89, 0x77, 0x34, 0xb0, 0x47, 0xd6,
	0xa2, 0xa9, 0x37, 0xff, 0xcd, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd4, 0xa8, 0x09, 0xe2, 0x12,
	0x03, 0x00, 0x00,
}
